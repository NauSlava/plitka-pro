#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ü–≤–µ—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
"""

import sys
import os
sys.path.append(os.path.dirname(__file__))

from color_manager import ColorManager

def test_color_parsing():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥ —Ü–≤–µ—Ç–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ü–≤–µ—Ç–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º ColorManager
    color_manager = ColorManager()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–æ–º–ø—Ç—ã
    test_prompts = [
        "70% red, 30% blue rubber tile, grid pattern",
        "60% red, 40% blue",
        "50% white, 30% gray, 20% black",
        "100% yellow",
        "25% red, 25% blue, 25% green, 25% yellow"
    ]
    
    for prompt in test_prompts:
        print(f"\nüìù –ü—Ä–æ–º–ø—Ç: {prompt}")
        
        # –¢–µ—Å—Ç extract_colors_from_prompt
        colors = color_manager.extract_colors_from_prompt(prompt)
        print(f"üé® –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞: {colors}")
        
        # –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        is_valid = color_manager.validate_colors(colors)
        print(f"‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è: {'–ü–†–û–ô–î–ï–ù–ê' if is_valid else '–ù–ï –ü–†–û–ô–î–ï–ù–ê'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ü–≤–µ—Ç–∞ –µ—Å—Ç—å –≤ —Ç–∞–±–ª–∏—Ü–µ
        for color in colors:
            if color not in color_manager.valid_colors:
                print(f"‚ùå –û–®–ò–ë–ö–ê: –¶–≤–µ—Ç '{color}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ!")
            else:
                print(f"‚úÖ –¶–≤–µ—Ç '{color}' –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ")

if __name__ == "__main__":
    test_color_parsing()
