{
  "model_version": "v4.4.09",
  "model_url": "https://replicate.com/nauslava/plitka-pro-project:v4.4.09",
  "description": "Тестовые запросы для модели генерации резиновой плитки",
  "api_parameters": {
    "prompt": "Описание цветов резиновой плитки (обязательный)",
    "negative_prompt": "Негативный промпт (опциональный, по умолчанию стандартный)",
    "seed": "Сид для воспроизводимости (опциональный, по умолчанию случайный)"
  },
  "test_cases": [
    {
      "name": "Базовый тест - одноцветная плитка",
      "description": "Простой запрос для генерации одноцветной резиновой плитки",
      "request": {
        "prompt": "100% black"
      },
      "expected_result": "Черная резиновая плитка с текстурой"
    },
    {
      "name": "Двухцветная плитка",
      "description": "Запрос для генерации двухцветной резиновой плитки",
      "request": {
        "prompt": "50% black, 50% white"
      },
      "expected_result": "Двухцветная резиновая плитка с черно-белым узором"
    },
    {
      "name": "Многоцветная плитка",
      "description": "Запрос для генерации многоцветной резиновой плитки",
      "request": {
        "prompt": "30% red, 40% blue, 30% yellow"
      },
      "expected_result": "Многоцветная резиновая плитка с красно-сине-желтым узором"
    },
    {
      "name": "Светлые тона",
      "description": "Запрос для генерации плитки в светлых тонах",
      "request": {
        "prompt": "60% beige, 40% light gray"
      },
      "expected_result": "Светлая резиновая плитка в бежево-серых тонах"
    },
    {
      "name": "Яркие цвета",
      "description": "Запрос для генерации плитки в ярких цветах",
      "request": {
        "prompt": "25% red, 25% green, 25% blue, 25% yellow"
      },
      "expected_result": "Яркая многоцветная резиновая плитка"
    },
    {
      "name": "С фиксированным сидом",
      "description": "Запрос с фиксированным сидом для воспроизводимости",
      "request": {
        "prompt": "100% blue",
        "seed": 12345
      },
      "expected_result": "Синяя резиновая плитка (воспроизводимый результат)"
    },
    {
      "name": "С кастомным негативным промптом",
      "description": "Запрос с пользовательским негативным промптом",
      "request": {
        "prompt": "100% green",
        "negative_prompt": "blurry, low quality, deformed, cartoon"
      },
      "expected_result": "Зеленая резиновая плитка с улучшенным качеством"
    },
    {
      "name": "Сложный узор",
      "description": "Запрос для генерации плитки со сложным узором",
      "request": {
        "prompt": "20% black, 30% white, 25% red, 25% blue"
      },
      "expected_result": "Сложный узор из четырех цветов"
    },
    {
      "name": "Монохромная плитка",
      "description": "Запрос для генерации монохромной плитки",
      "request": {
        "prompt": "100% gray"
      },
      "expected_result": "Серая монохромная резиновая плитка"
    },
    {
      "name": "Теплые тона",
      "description": "Запрос для генерации плитки в теплых тонах",
      "request": {
        "prompt": "40% orange, 35% brown, 25% beige"
      },
      "expected_result": "Резиновая плитка в теплых оранжево-коричневых тонах"
    }
  ],
  "curl_examples": [
    {
      "name": "Базовый запрос",
      "description": "Простой curl запрос для тестирования",
      "command": "curl -s -X POST \\\n  -H \"Authorization: Token YOUR_API_TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"version\": \"6596c534aef957a14856cb009b9663236917ff7fc533d31ccfaa876656d8db07\",\n    \"input\": {\n      \"prompt\": \"100% black\"\n    }\n  }' \\\n  https://api.replicate.com/v1/predictions"
    },
    {
      "name": "Запрос с сидом",
      "description": "Curl запрос с фиксированным сидом",
      "command": "curl -s -X POST \\\n  -H \"Authorization: Token YOUR_API_TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"version\": \"6596c534aef957a14856cb009b9663236917ff7fc533d31ccfaa876656d8db07\",\n    \"input\": {\n      \"prompt\": \"50% red, 50% blue\",\n      \"seed\": 12345\n    }\n  }' \\\n  https://api.replicate.com/v1/predictions"
    },
    {
      "name": "Запрос с негативным промптом",
      "description": "Curl запрос с кастомным негативным промптом",
      "command": "curl -s -X POST \\\n  -H \"Authorization: Token YOUR_API_TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"version\": \"6596c534aef957a14856cb009b9663236917ff7fc533d31ccfaa876656d8db07\",\n    \"input\": {\n      \"prompt\": \"100% green\",\n      \"negative_prompt\": \"blurry, low quality, deformed\"\n    }\n  }' \\\n  https://api.replicate.com/v1/predictions"
    }
  ],
  "javascript_examples": [
    {
      "name": "Базовый JavaScript запрос",
      "description": "Простой JavaScript запрос для веб-приложения",
      "code": "const response = await fetch('https://api.replicate.com/v1/predictions', {\n  method: 'POST',\n  headers: {\n    'Authorization': 'Token YOUR_API_TOKEN',\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    version: '6596c534aef957a14856cb009b9663236917ff7fc533d31ccfaa876656d8db07',\n    input: {\n      prompt: '100% black'\n    }\n  })\n});\n\nconst prediction = await response.json();"
    },
    {
      "name": "JavaScript с обработкой результата",
      "description": "JavaScript запрос с обработкой результата",
      "code": "async function generateRubberTile(prompt, seed = -1) {\n  const response = await fetch('https://api.replicate.com/v1/predictions', {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Token YOUR_API_TOKEN',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      version: '6596c534aef957a14856cb009b9663236917ff7fc533d31ccfaa876656d8db07',\n      input: {\n        prompt: prompt,\n        seed: seed\n      }\n    })\n  });\n\n  const prediction = await response.json();\n  \n  // Ожидание завершения генерации\n  while (prediction.status !== 'succeeded' && prediction.status !== 'failed') {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    const statusResponse = await fetch(prediction.urls.get, {\n      headers: { 'Authorization': 'Token YOUR_API_TOKEN' }\n    });\n    prediction = await statusResponse.json();\n  }\n  \n  return prediction;\n}"
    }
  ],
  "python_examples": [
    {
      "name": "Python запрос",
      "description": "Python запрос с использованием requests",
      "code": "import requests\nimport time\n\n# Создание предсказания\nresponse = requests.post(\n    'https://api.replicate.com/v1/predictions',\n    headers={\n        'Authorization': 'Token YOUR_API_TOKEN',\n        'Content-Type': 'application/json'\n    },\n    json={\n        'version': '6596c534aef957a14856cb009b9663236917ff7fc533d31ccfaa876656d8db07',\n        'input': {\n            'prompt': '100% black'\n        }\n    }\n)\n\nprediction = response.json()\n\n# Ожидание завершения\nwhile prediction['status'] not in ['succeeded', 'failed']:\n    time.sleep(1)\n    response = requests.get(\n        prediction['urls']['get'],\n        headers={'Authorization': 'Token YOUR_API_TOKEN'}\n    )\n    prediction = response.json()\n\nprint(f\"Результат: {prediction['output']}\")"
    }
  ],
  "important_notes": [
    "Модель генерирует изображения только в формате 'вид сверху' (0° угол)",
    "Все запросы автоматически дополняются токенами активации '<s0><s1>'",
    "Качество изображения: 1024x1024 пикселей",
    "Количество шагов инференса: 20",
    "Guidance scale: 7.0",
    "Модель возвращает 3 изображения: preview (512x512), final (1024x1024), colormap"
  ],
  "error_handling": {
    "common_errors": [
      "Invalid prompt format - используйте простые описания цветов",
      "Model initialization failed - проверьте доступность GPU",
      "Textual Inversion loading failed - модель продолжит работу без TI"
    ],
    "recommendations": [
      "Используйте простые цветовые описания (например, '100% black')",
      "Для воспроизводимости используйте фиксированный seed",
      "При ошибках попробуйте перезапустить запрос"
    ]
  }
}
